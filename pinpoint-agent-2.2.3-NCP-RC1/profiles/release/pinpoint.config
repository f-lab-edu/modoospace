#
# Pinpoint agent configuration
# (Phase : dev)
#
# Profiles
#  - -Dpinpoint.profiler.profiles.active=release or local
#  - Modify `pinpoint.profiler.profiles.active=release` in $PINPOINT_AGENT_DIR/pinpoint-root.config
# Custom Profile
#  - 1. Create a custom profile in $PINPOINT_HOME/profiles/MyProfile
#    - Add pinpoint.config & log4j2.xml
#  - 2. -Dpinpoint.profiler.profiles.active=MyProfile
# Support external property
#  - -Dpinpoint.config=$MY_CONFIG_PATH/pinpoint-root.config
pinpoint.profiler.profiles.active=${maven.pinpoint.profiler.profiles.active}

# GRPC or THRIFT
profiler.transport.module=GRPC
###########################################################
# gRPC Configuration                                      #
###########################################################
profiler.transport.grpc.collector.ip=collect.pinpoint.ncloud.com

###########################################################
# Thrift Configuration                                    #
###########################################################
# placeHolder
profiler.collector.ip=collect.pinpoint.ncloud.com

###########################################################
# Profiler Global Configuration                           #
###########################################################
profiler.enable=true

# Application namespace
# Differentiate from external pinpoint agents. (e.g., com.pinpoint)
profiler.application.namespace=

profiler.interceptorregistry.size=8192

# Manually override jvm vendor name (Oracle, IBM, OpenJDK, etc)
# You probably won't ever need to set this value.
profiler.jvm.vendor.name=

# Interval (in milliseconds) at which agent stat data is collected. (default : 5000, min : 1000, max : 5000)
profiler.jvm.stat.collect.interval=5000
# Number of agent stat data sent to the collector in a single batch. (default : 6)
profiler.jvm.stat.batch.send.count=6

# Allow to add detailed collector's metrics
profiler.jvm.stat.collect.detailed.metrics=false

# Allow sampling.
profiler.sampling.enable=true

# 아래 지정한 값중 한 개의 트랜잭션을 수집합니다. (예를들어 1로 지정하면 100%수집, 2로 지정하면 50%수집 셈)
profiler.sampling.rate=1

# Permits per second, if throughput is 0, it is unlimited.
# "New" is a transaction that is newly traced.
profiler.sampling.new.throughput=0
# "Continue" is a transaction that is already being tracked.
profiler.sampling.continue.throughput=0

# span을 Io에 flush할 경우 buffering 여부
profiler.io.buffering.enable=true

# buffering 시 몇개 까지 저장할지 여부
profiler.io.buffering.buffersize=20

###########################################################
# Span Data Sender                                        #
###########################################################
# Should keep in mind
# 1. Loadbancing : TCP transport load balancing is per connection.(UDP transport loadbalancing is per packet)
# 2. In unexpected situations, UDP has its own protection feature (like packet loss etc.), but tcp does not have such a feature. (We will add protection later)
profiler.spandatasender.transport.type=UDP

# These settings are active only when using UDP.
# Capacity of the SpanDataSender write queue.
profiler.spandatasender.write.queue.size=5120
#profiler.spandatasender.socket.sendbuffersize=1048576
#profiler.spandatasender.socket.timeout=3000
profiler.spandatasender.chunk.size=16384
profiler.spandatasender.socket.type=OIO

###########################################################
# Stat Data Sender                                        #
###########################################################
# Should keep in mind
# 1. Loadbancing : TCP transport load balancing is per connection.(UDP transport loadbalancing is per packet)
# 2. In unexpected situations, UDP has its own protection feature (like packet loss etc.), but tcp does not have such a feature. (We will add protection later)
profiler.statdatasender.transport.type=UDP

# These settings are active only when using UDP.
# Capacity of the StatDataSender write queue.
profiler.statdatasender.write.queue.size=5120
#profiler.statdatasender.socket.sendbuffersize=1048576
#profiler.statdatasender.socket.timeout=3000
profiler.statdatasender.chunk.size=16384
profiler.statdatasender.socket.type=OIO

# Interval to retry sending agent info. Unit is milliseconds.
profiler.agentInfo.send.retry.interval=300000

###########################################################
# Base Tcp Sender                                         #
###########################################################
#  Tcp Data Command 허용 여부
profiler.tcpdatasender.command.accept.enable=true
profiler.tcpdatasender.command.activethread.enable=true
profiler.tcpdatasender.command.activethread.count.enable=true
profiler.tcpdatasender.command.activethread.threaddump.enable=true
profiler.tcpdatasender.command.activethread.threadlightdump.enable=true

profiler.tcpdatasender.client.write.timeout=3000
profiler.tcpdatasender.client.request.timeout=3000
profiler.tcpdatasender.client.reconnect.interval=3000
profiler.tcpdatasender.client.ping.interval=300000
profiler.tcpdatasender.client.handshake.interval=60000
profiler.tcpdatasender.client.write.buffer.highwatermark=32m
profiler.tcpdatasender.client.write.buffer.lowwatermark=16m

# Trace Agent active thread info.
profiler.pinpoint.activethread=true

# DataSource 수집 여부
profiler.pinpoint.datasource=true

# Deadlock Monitor
profiler.monitor.deadlock.enable=true
profiler.monitor.deadlock.interval=60000

## Call Stack
# Set max depth, if -1 is unlimited and min is 2.
profiler.callstack.max.depth=64

# weather or not to propagate exceptions occured at interceptor
profiler.interceptor.exception.propagate=true

# Allow bytecode framework (ASM only)
profiler.instrument.engine=ASM

# bytecode dump option
# java bytecode debug option
bytecode.dump.enable=false
#bytecode.dump.classlist=com.naver.user.UserService,com.naver.TestDao
bytecode.dump.classlist=
bytecode.dump.bytecode=false
bytecode.dump.verify=false
bytecode.dump.asm=false

# Matcher
profiler.instrument.matcher.enable=true
# Matcher cache. max size is 64.
profiler.instrument.matcher.interface.cache.size=4
profiler.instrument.matcher.interface.cache.entry.size=16
profiler.instrument.matcher.annotation.cache.size=4
profiler.instrument.matcher.annotation.cache.entry.size=4
profiler.instrument.matcher.super.cache.size=4
profiler.instrument.matcher.super.cache.entry.size=4

# Lambda expressions.
profiler.lambda.expressions.support=true

# Proxy HTTP headers.
# Please see (https://github.com/naver/pinpoint/blob/master/doc/proxy-http-header.md) for more information.
profiler.proxy.http.header.enable=true

# HTTP status code with request failure.
# 1xx, 2xx, 3xx, 4xx, 5xx, 100, 101, 200, 201, ... 501, 502, 503, 504, 505
# e.g. profiler.http.status.code.errors=5xx, 401, 403
profiler.http.status.code.errors=5xx

# record HTTP request headers case-sensitive
# e.g. profiler.http.record.request.headers=X-AccessKey,X-Device-UUID
profiler.http.record.request.headers=

# record HTTP request cookies(case-sensitive) in Cookie header
# e.g. profiler.http.record.request.cookies=userid,device-id,uuid
profiler.http.record.request.cookies=

###########################################################
# application type                                        #
###########################################################
#profiler.applicationservertype=TOMCAT
#profiler.applicationservertype=BLOC

# Needs to be a comma separated list of plugin's groupId:artifactId
# Ex: com.navercorp.pinpoint:pinpoint-tomcat-plugin, com.navercorp.pinpoint:pinpoint-jboss-plugin
profiler.plugin.load.order=com.navercorp.pinpoint:pinpoint-bloc-plugin,com.navercorp.pinpoint:pinpoint-tomcat-plugin
profiler.plugin.disable=

###########################################################
# user defined classes                                    #
###########################################################
# Specify classes and methods you want to profile here.

# Needs to be a comma separated list of fully qualified class names, or fully qualified package names with wild card class.
# profiler.include=com.navercorp.pinpoint.testweb.controller.*,com.navercorp.pinpoint.testweb.MyClass

# for play framework.
profiler.entrypoint=play.core.j.HttpExecutionContext.execute

# Message queue listener invoker methods.
# This is usually for when a separate implementation or a framework provides a separate handler for invoking callbacks
# when consuming messages.
# Comma-separated list of fully qualified method names with a Message argument.
profiler.message.queue.client.handler.methods=org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener,org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener

###########################################################
# user defined ignore-error-handler                       #
###########################################################
# Set exception to ignore error
#
# eg) Set `com.myapplication.user.AccessDeniedException("Access is denied")` to error
#
# ${ERROR_HANDLER_ID} PATTERN = [A-Za-z0-9-_]+
#
# Match the FQCN(Fully qualified Class Name) of the exception. Separated by ","
# profiler.ignore-error-handler.${ERROR_HANDLER_ID}.class-name=com.myapplication.user.AccessDeniedException
#
# Match Exception.getMessage(), This action is performed when FQCN matching is successful.
# The match condition uses String.contains(). Separated by ","
# profiler.ignore-error-handler.${ERROR_HANDLER_ID}.exception-message@contains=Access is denied
#
# Search for chained exceptions(Exception.getCause()). (default : true)
# profiler.ignore-error-handler.${ERROR_HANDLER_ID}.nested=true
#
# Search for parent class. (default : true)
# profiler.ignore-error-handler.${ERROR_HANDLER_ID}.parent=true

profiler.ignore-error-handler.myErrorHandler.class-name=
profiler.ignore-error-handler.myErrorHandler.exception-message@contains=
# profiler.ignore-error-handler.myErrorHandler.nested=true
# profiler.ignore-error-handler.myErrorHandler.parent=true

###########################################################
# TOMCAT                                                  #
###########################################################
profiler.tomcat.enable=true
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.tomcat.bootstrap.main=org.apache.catalina.startup.Bootstrap
# Hide pinpoint headers.
profiler.tomcat.hidepinpointheader=true
# URLs to exclude from tracing.
# Support ant style pattern. e.g. /aa/*.html, /??/exclude.html
#naver standard l7 check
profiler.tomcat.excludeurl=/monitor/l7check.html
# HTTP Request methods to exclude from tracing
#profiler.tomcat.excludemethod=POST,PUT
profiler.tomcat.tracerequestparam=true
# HTTP Request methods to exclude from tracing
#profiler.tomcat.excludemethod=POST,PUT

# original IP address header
# https://en.wikipedia.org/wiki/X-Forwarded-For
#profiler.tomcat.realipheader=X-Forwarded-For
# nginx real ip header
#profiler.tomcat.realipheader=X-Real-IP
# optional parameter, If the header value is ${profiler.tomcat.realipemptyvalue}, Ignore header value.
#profiler.tomcat.realipemptyvalue=unknown


###########################################################
# JETTY                                                   #
###########################################################
profiler.jetty.enable=false
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.jetty.bootstrap.main=org.eclipse.jetty.start.Main
# URLs to exclude from tracing.
# Support ant style pattern. e.g. /aa/*.html, /??/exclude.html
profiler.jetty.excludeurl=
# HTTP Request methods to exclude from tracing
#profiler.jetty.excludemethod=
# Hide pinpoint headers. 9.x only
profiler.jetty.hidepinpointheader=true
profiler.jetty.tracerequestparam=false

# original IP address header
# https://en.wikipedia.org/wiki/X-Forwarded-For
#profiler.jetty.realipheader=X-Forwarded-For
# nginx real ip header
#profiler.jetty.realipheader=X-Real-IP
# optional parameter, If the header value is ${profiler.jetty.realipemptyvalue}, Ignore header value.
#profiler.jetty.realipemptyvalue=unknown

###########################################################
# DUBBO                                                   #
###########################################################
profiler.dubbo.enable=false
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.dubbo.bootstrap.main=com.alibaba.dubbo.container.Main

###########################################################
# APACHE DUBBO                                            #
###########################################################
profiler.apache.dubbo.enable=true
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.apache.dubbo.bootstrap.main=

###########################################################
# JBOSS                                                   #
###########################################################
profiler.jboss.enable=false
profiler.jboss.traceEjb=false
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.jboss.bootstrap.main=org.jboss.modules.Main
# Hide pinpoint headers.
profiler.jboss.hidepinpointheader=true
# URLs to exclude from tracing.
# Support ant style pattern. e.g. /aa/*.html, /??/exclude.html
profiler.jboss.excludeurl=
# HTTP Request methods to exclude from tracing
#profiler.jboss.excludemethod=
profiler.jboss.tracerequestparam=true

# original IP address header
# https://en.wikipedia.org/wiki/X-Forwarded-For
#profiler.jboss.realipheader=X-Forwarded-For
# nginx real ip header
#profiler.jboss.realipheader=X-Real-IP
# optional parameter, If the header value is ${profiler.jboss.realipemptyvalue}, Ignore header value.
#profiler.jboss.realipemptyvalue=unknown

###########################################################
# Weblogic                                                #
###########################################################
profiler.weblogic.enable=true
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.weblogic.bootstrap.main=weblogic.Server
# trace param in request  ,default value is true
profiler.weblogic.tracerequestparam=true
# URLs to exclude from tracing.
# Support ant style pattern. e.g. /aa/*.html, /??/exclude.html
profiler.weblogic.excludeurl=
# HTTP Request methods to exclude from tracing
#profiler.weblogic.excludemethod=
# Hide pinpoint headers.
profiler.weblogic.hidepinpointheader=true

# original IP address header
# https://en.wikipedia.org/wiki/X-Forwarded-For
#profiler.weblogic.realipheader=X-Forwarded-For
# nginx real ip header
#profiler.weblogic.realipheader=X-Real-IP
# optional parameter, If the header value is ${profiler.weblogic.realipemptyvalue}, Ignore header value.
#profiler.weblogic.realipemptyvalue=unknown

###########################################################
# BLOC                                                    #
###########################################################
profiler.bloc.enable=true
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.bloc.bootstrap.main=org.apache.catalina.startup.Bootstrap, com.nhncorp.lucy.bloc.server.BlocServer
profiler.bloc.tracerequestparam=true

###########################################################
# Websphere                                               #
###########################################################
profiler.websphere.enable=true
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.websphere.bootstrap.main=
# trace param in request  ,default value is true
profiler.websphere.tracerequestparam=true
# URLs to exclude from tracing.
# Support ant style pattern. e.g. /aa/*.html, /??/exclude.html
profiler.websphere.excludeurl=
# HTTP Request methods to exclude from tracing
profiler.websphere.excludemethod=
# Hide pinpoint headers.
profiler.websphere.hidepinpointheader=true

# original IP address header
# https://en.wikipedia.org/wiki/X-Forwarded-For
#profiler.websphere.realipheader=X-Forwarded-For
# nginx real ip header
#profiler.websphere.realipheader=X-Real-IP
#profiler.websphere.realipemptyvalue=unknown

###########################################################
# Vert.x(Reliability and stability can not be guaranteed) #
###########################################################
profiler.vertx.enable=true
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.vertx.bootstrap.main=io.vertx.core.Starter
# Track Vertx.runOnContext() & Vertx.executeBlocking().
# Sets the base packages that implements io.vertx.core.Handler.
profiler.vertx.handler.base-packages=
# e.g. com.service.handler, com.server.http.handler

# HTTP server
profiler.vertx.http.server.enable=true
# Set HttpServerRequestHandler method name. The argument is io.vertx.core.http.HttpServerRequest.
# Vert.x 3.6 ~ 3.7
profiler.vertx.http.server.request-handler.method.name=io.vertx.ext.web.impl.RouterImpl.handle
# Vert.x 3.5
# profiler.vertx.http.server.request-handler.method.name=io.vertx.ext.web.impl.RouterImpl.accept
profiler.vertx.http.server.tracerequestparam=true
profiler.vertx.http.server.hidepinpointheader=true
# URLs to exclude from tracing.
# Support ant style pattern. e.g. /aa/*.html, /??/exclude.html
profiler.vertx.http.server.excludeurl=/monitor/l7check.html, /monitor/l7check.nhn
# original IP address header
# https://en.wikipedia.org/wiki/X-Forwarded-For
#profiler.vertx.http.server.realipheader=X-Forwarded-For
# nginx real ip header
#profiler.vertx.http.realipheader=X-Real-IP
# optional parameter, If the header value is ${profiler.vertx.http.server.realipemptyvalue}, Ignore header value.
#profiler.vertx.http.server.realipemptyvalue=unknown
# HTTP Request methods to exclude from tracing
#profiler.vertx.http.server.excludemethod=

# HTTP client
profiler.vertx.http.client.enable=true
profiler.vertx.http.client.param=true
profiler.vertx.http.client.cookie=true
# When to dump cookies. Either ALWAYS or EXCEPTION.
profiler.vertx.http.client.cookie.dumptype=ALWAYS
# 1 out of n cookies will be sampled where n is the rate. (1: 100%)
profiler.vertx.http.client.cookie.sampling.rate=1
profiler.vertx.http.client.entity.statuscode=true


###########################################################
# Resin
###########################################################
# default enable resin plugin
profiler.resin.enable=true
# if empty , default value is : com.caucho.server.resin.Resin
profiler.resin.bootstrap.main=
# trace param in request  ,default value is true
profiler.resin.tracerequestparam=true
# URLs to exclude from tracing.
# Support ant style pattern. e.g. /aa/*.html, /??/exclude.html
profiler.resin.excludeurl=
# Hide pinpoint headers.
profiler.resin.hidepinpointheader=true
# HTTP Request methods to exclude from tracing
#profiler.resin.excludemethod=

# original IP address header
# https://en.wikipedia.org/wiki/X-Forwarded-For
#profiler.resin.realipheader=X-Forwarded-For
# nginx real ip header
#profiler.resin.realipheader=X-Real-IP
# optional parameter, If the header value is ${profiler.resin.realipemptyvalue}, Ignore header value.
#profiler.resin.realipemptyvalue=unknown

###########################################################
# Jeus                                                   #
###########################################################
profiler.jeus.enable=true
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.jeus.bootstrap.main=jeus.server.ServerBootstrapper
# Hide pinpoint headers.
profiler.jeus.hidepinpointheader=true
# URLs to exclude from tracing.
# Support ant style pattern. e.g. /aa/*.html, /??/exclude.html
profiler.jeus.excludeurl=
# HTTP Request methods to exclude from tracing
#profiler.jeus.excludemethod=
profiler.jeus.tracerequestparam=true

# original IP address header
# https://en.wikipedia.org/wiki/X-Forwarded-For
#profiler.jeus.realipheader=X-Forwarded-For
# nginx real ip header
#profiler.jeus.realipheader=X-Real-IP
# optional parameter, If the header value is ${profiler.jeus.realipemptyvalue}, Ignore header value.
#profiler.jeus.realipemptyvalue=unknown

###########################################################
# Undertow
###########################################################
profiler.undertow.enable=true
profiler.undertow.deploy.servlet=true
profiler.undertow.bootstrap.main=
# Set class name that implements io.undertow.server.HttpHandler.
# The HttpHandler class name is an argument of the Undertow.builder().setHandler(httpHandler) method.
# Support ANT style pattern. e.g. foo.handler.*, bar.??.RequestHandler, your.inner-class.name*
## Default is ALL HttpHandler
## io.undertow.servlet.handlers.ServletInitialHandler$1 - Servlet deployment (e.g. Spring Boot Undertow, Wildfly)
## org.springframework.http.server.reactive.UndertowHttpHandlerAdapter - Spring WebFlux
profiler.undertow.http-handler.class.name=io.undertow.servlet.handlers.ServletInitialHandler$1, org.springframework.http.server.reactive.UndertowHttpHandlerAdapter

# trace param in request  ,default value is true
profiler.undertow.tracerequestparam=true
# Hide pinpoint headers.
profiler.undertow.hidepinpointheader=true
# URLs to exclude from tracing.
# Support ant style pattern. e.g. /aa/*.html, /??/exclude.html
profiler.undertow.excludeurl=
# HTTP Request methods to exclude from tracing
#profiler.undertow.excludemethod=

# original IP address header
# https://en.wikipedia.org/wiki/X-Forwarded-For
#profiler.undertow.realipheader=X-Forwarded-For
# nginx real ip header
#profiler.undertow.realipheader=X-Real-IP
# optional parameter, If the header value is ${profiler.undertow.realipemptyvalue}, Ignore header value.
#profiler.undertow.realipemptyvalue=unknown


###########################################################
# SPRING BOOT                                             #
###########################################################
profiler.springboot.enable=true
# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.springboot.bootstrap.main=org.springframework.boot.loader.JarLauncher, org.springframework.boot.loader.WarLauncher, org.springframework.boot.loader.PropertiesLauncher

###########################################################
# Reactor Netty
###########################################################
profiler.reactor-netty.enable=true

# Classes for detecting application server type. Comma separated list of fully qualified class names. Wildcard not supported.
profiler.reactor-netty.server.bootstrap.main=
# use an asynchronous endpoint.
profiler.reactor-netty.server.end-point.async.enable=true
# trace param in request  ,default value is true
profiler.reactor-netty.server.tracerequestparam=true
# URLs to exclude from tracing.
# Support ant style pattern. e.g. /aa/*.html, /??/exclude.html
profiler.reactor-netty.server.excludeurl=
# HTTP Request methods to exclude from tracing
#profiler.reactor-netty.server.excludemethod=

# original IP address header
# https://en.wikipedia.org/wiki/X-Forwarded-For
#profiler.reactor-netty.server.realipheader=X-Forwarded-For
# nginx real ip header
#profiler.reactor-netty.server.realipheader=X-Real-IP
# optional parameter, If the header value is ${profiler.reactor-netty.realipemptyvalue}, Ignore header value.
#profiler.reactor-netty.server.realipemptyvalue=unknown

# Client
profiler.reactor-netty.client.enable=true
# Record Parameter.
profiler.reactor-netty.client.param=true
# Unsupported cookie and entity information


# Set whether to trace the Subscriber.onError(Throwable t) method
profiler.reactor-netty.trace.subscribe.error=true
# Set messages to be excluded from errors. Messages are separated by ',' characters.
profiler.reactor-netty.trace.subscribe.error.exclude.message=

###########################################################
# JSP                                                     #
###########################################################
profiler.jsp.enable=true

###########################################################
# JDBC                                                    #
###########################################################
# Profile JDBC drivers.
profiler.jdbc=true
# Size of cache. Fixed maximum.
profiler.jdbc.sqlcachesize=1024
# trace bindvalues for PreparedStatements
profiler.jdbc.tracesqlbindvalue=true
# Maximum bindvalue size.
profiler.jdbc.maxsqlbindvaluesize=1024

#
# MYSQL
#
# Profile MySQL.
profiler.jdbc.mysql=true
# Allow profiling of setautocommit.
profiler.jdbc.mysql.setautocommit=true
# Allow profiling of commit.
profiler.jdbc.mysql.commit=true
# Allow profiling of rollback.
profiler.jdbc.mysql.rollback=true
# Trace bindvalues for MySQL PreparedStatements (overrides profiler.jdbc.tracesqlbindvalue)
#profiler.jdbc.mysql.tracesqlbindvalue=true

#
# MARIADB
#
# Profile MariaDB
profiler.jdbc.mariadb=true
# Allow profiling of setautocommit.
profiler.jdbc.mariadb.setautocommit=true
# Allow profiling of commit.
profiler.jdbc.mariadb.commit=true
# Allow profiling of rollback.
profiler.jdbc.mariadb.rollback=true
# Trace bindvalues for MariaDB PreparedStatements (overrides profiler.jdbc.tracesqlbindvalue)
#profiler.jdbc.mariadb.tracesqlbindvalue=true

#
# MSSQL Jtds
#
# Profile jTDS.
profiler.jdbc.jtds=true
# Allow profiling of setautocommit.
profiler.jdbc.jtds.setautocommit=true
# Allow profiling of commit.
profiler.jdbc.jtds.commit=true
# Allow profiling of rollback.
profiler.jdbc.jtds.rollback=true
# Trace bindvalues for jTDS PreparedStatements (overrides profiler.jdbc.tracesqlbindvalue)
#profiler.jdbc.jtds.tracesqlbindvalue=true

#
# MSSQL JDBC
#
# Profile Mssql
profiler.jdbc.mssql=true
profiler.jdbc.mssql.setautocommit=false
profiler.jdbc.mssql.commit=false
profiler.jdbc.mssql.rollback=false
profiler.jdbc.mssql.tracesqlbindvalue=true

#
# Oracle
#
# Profile Oracle DB.
profiler.jdbc.oracle=true
# Allow profiling of setautocommit.
profiler.jdbc.oracle.setautocommit=true
# Allow profiling of commit.
profiler.jdbc.oracle.commit=true
# Allow profiling of rollback.
profiler.jdbc.oracle.rollback=true
# Trace bindvalues for Oracle PreparedStatements (overrides profiler.jdbc.tracesqlbindvalue)
#profiler.jdbc.oracle.tracesqlbindvalue=true

#
# CUBRID
#
# Profile CUBRID.
profiler.jdbc.cubrid=true
# Allow profiling of setautocommit.
profiler.jdbc.cubrid.setautocommit=true
# Allow profiling of commit.
profiler.jdbc.cubrid.commit=true
# Allow profiling of rollback.
profiler.jdbc.cubrid.rollback=true
# Trace bindvalues for CUBRID PreparedStatements (overrides profiler.jdbc.tracesqlbindvalue)
#profiler.jdbc.cubrid.tracesqlbindvalue=true

#
# INFORMIX
# support 4.10.10.0+
#
# Profile INFORMIX.
profiler.jdbc.informix=true
# Allow profiling of setautocommit.
profiler.jdbc.informix.setautocommit=false
# Allow profiling of commit.
profiler.jdbc.informix.commit=false
# Allow profiling of rollback.
profiler.jdbc.informix.rollback=false
# Trace bindvalues for INFORMIX PreparedStatements (overrides profiler.jdbc.tracesqlbindvalue)
#profiler.jdbc.informix.tracesqlbindvalue=true

#
# DBCP
#
# Profile DBCP.
profiler.jdbc.dbcp=true
profiler.jdbc.dbcp.connectionclose=true

#
# DBCP2
#
# Profile DBCP2.
profiler.jdbc.dbcp2=true
profiler.jdbc.dbcp2.connectionclose=true

#
# HIKARICP
#
profiler.jdbc.hikaricp=true
profiler.jdbc.hikaricp.connectionclose=true

#
# DRUID
#
profiler.jdbc.druid=false
profiler.jdbc.druid.connectionclose=false

#
# NBASE-T
#
profiler.jdbc.nbaset=true
profiler.jdbc.nbaset.setautocommit=true
profiler.jdbc.nbaset.commit=true
profiler.jdbc.nbaset.rollback=true
#profiler.jdbc.nbaset.tracesqlbindvalue=true

#
# NBASE-T-CP
#
profiler.jdbc.nbaset.cp=true

#
# CASSANDRA
#
# Profile CASSANDRA.
profiler.cassandra=true
# Trace bindvalues for CASSANDRA PreparedStatements (overrides profiler.jdbc.tracesqlbindvalue)
#profiler.cassandra.tracecqlbindvalue=true

#
# PostgreSQL
#
# Profile PostgreSQL.
profiler.jdbc.postgresql=true
# trace bindvalues for PreparedStatements
profiler.jdbc.postgresql.tracesqlbindvalue=true
# Allow profiling of setautocommit.
profiler.jdbc.postgresql.setautocommit=true
# Allow profiling of commit.
profiler.jdbc.postgresql.commit=true
# Allow profiling of rollback.
profiler.jdbc.postgresql.rollback=true

#
# Tibero
#
profiler.jdbc.tibero=true
profiler.jdbc.tibero.tracesqlbindvalue=true
profiler.jdbc.tibero.setautocommit=true
profiler.jdbc.tibero.commit=true
profiler.jdbc.tibero.rollback=true
###########################################################
# MONGODB
###########################################################
profiler.mongo=true
profiler.mongo.collectjson=true
profiler.mongo.tracebsonbindvalue=true

###########################################################
# Apache HTTP Client  3.x                                 #
###########################################################
# Record Parameter.
profiler.apache.httpclient3.param=true

# Record Cookies.
profiler.apache.httpclient3.cookie=true
# When cookies should be dumped. It could be ALWAYS or EXCEPTION.
profiler.apache.httpclient3.cookie.dumptype=ALWAYS
# 1 out of n cookies will be sampled where n is the rate. (1: 100%)
profiler.apache.httpclient3.cookie.sampling.rate=1
profiler.apache.httpclient.cookie.dumpsize=1024

# Dump entities of POST or PUT request. limited to entities which is HttpEtity.isRepeatable() == true.
profiler.apache.httpclient3.entity=true
# When entities should be dumped. ALWAYS or EXCEPTION.
profiler.apache.httpclient3.entity.dumptype=ALWAYS
# 1 out of n entities will be sampled where n is the rate. (1: 100%)
profiler.apache.httpclient3.entity.sampling.rate=1
profiler.apache.httpclient3.entity.dumpsize=1024

# Record IO time.
profiler.apache.httpclient3.io=true

###########################################################
# Apache HTTP Client  4.x                                 #
###########################################################
# Record Parameter.
profiler.apache.httpclient4.param=true

# Record cookies.
profiler.apache.httpclient4.cookie=true
# cookie를 언제 덤프할지 결정. ALWAYS or EXCEPTION 2가지
profiler.apache.httpclient4.cookie.dumptype=ALWAYS
# 1 out of n cookies will be sampled where n is the rate. (1: 100%)
profiler.apache.httpclient4.cookie.sampling.rate=1
profiler.apache.httpclient4.cookie.dumpsize=1024

# post, put의 entity를 덤프한다. 단 HttpEtity.isRepeatable()=true 인 Entity에 한정된다.
profiler.apache.httpclient4.entity=true
# entity를 언제 덤프할지 결정. ALWAYS or EXCEPTION 2가지
profiler.apache.httpclient4.entity.dumptype=ALWAYS
# 1 out of n entities will be sampled where n is the rate. (1: 100%)
profiler.apache.httpclient4.entity.sampling.rate=1
profiler.apache.httpclient4.cookie.dumpsize=1024

# Allow profiling status code value.
profiler.apache.httpclient4.entity.statuscode=true

# Record IO time.
profiler.apache.httpclient4.io=true

# Not supported yet
#profiler.apache.nio.httpclient4=true

###########################################################
# JDK HTTPURLConnection                                   #
###########################################################
# Profile parameter.
profiler.jdk.http.param=true;

###########################################################
# Ning Async HTTP Client                                  #
###########################################################
# Profile Ning Async HTTP Client.
profiler.ning.asynchttpclient=true

# Record parameters. (unsupported in 1.8.x, 1.9.x versions)
profiler.ning.asynchttpclient.param=true

# Record cookies.
profiler.ning.asynchttpclient.cookie=true
# When to dump cookies. Either ALWAYS or EXCEPTION.
profiler.ning.asynchttpclient.cookie.dumptype=ALWAYS
# Cookie dump size.
profiler.ning.asynchttpclient.cookie.dumpsize=1024
# 1 out of n cookies will be sampled where n is the rate. (1: 100%)
profiler.ning.asynchttpclient.cookie.sampling.rate=1

# Record Entities.
profiler.ning.asynchttpclient.entity=true
# When to dump entities. Either ALWAYS or EXCEPTION.
profiler.ning.asynchttpclient.entity.dumptype=ALWAYS
# Entity dump size.
profiler.ning.asynchttpclient.entity.dumpsize=1024
# 1 out of n cookies will be sampled where n is the rate. (1: 100%)
profiler.ning.asynchttpclient.entity.sampling.rate=1

# Record parameters. (unsupported in 1.8.x, 1.9.x versions)
profiler.ning.asynchttpclient.param=false
# When to dump parameters. Either ALWAYS or EXCEPTION.
profiler.ning.asynchttpclient.param.dumptype=EXCEPTION
# Parameter dump size.
profiler.ning.asynchttpclient.param.dumpsize=1024
# 1 out of n parameters will be sampled where n is the rate. (1: 100%)
profiler.ning.asynchttpclient.param.sampling.rate=10

###########################################################
# LINE+ baseframework                                     #
###########################################################
profiler.line.game.netty.param.dumpsize=512
profiler.line.game.netty.entity.dumpsize=512
profiler.line.game.netty.param=true

###########################################################
# Arcus                                                   #
###########################################################
# Profile Arcus.
profiler.arcus=true
profiler.arcus.async=true
# Record keytrace.
profiler.arcus.keytrace=false


###########################################################
# Memcached                                               #
###########################################################
# Profile Memecached.
profiler.memcached=true
profiler.memcached.async=true
# Record keytrace
profiler.memcached.keytrace=false


###########################################################
# Thrift                                                  #
###########################################################
# Profile Thrift
profiler.thrift.client=true
profiler.thrift.client.async=false
# Profile processor.
profiler.thrift.processor=true
profiler.thrift.processor.async=false
# Allow recording arguments.
profiler.thrift.service.args=false
# Allow recording result.
profiler.thrift.service.result=false


###########################################################
# ibatis                                                  #
###########################################################
# Profile ibatis.
profiler.orm.ibatis=true


###########################################################
# mybatis                                                 #
###########################################################
# Profile mybatis
profiler.orm.mybatis=true


###########################################################
# spring beans
###########################################################
# Profile spring-beans
profiler.spring.beans=true

# Only public methods are tracked.
# filters
#    filter
#    filter OR filters
# filter
#    value
#    value AND filter
# value
#    token
#    token OR token
# token
#    profiler.spring.beans.n.scope= [component-scan | post-processor] default is component-scan.
#    profiler.spring.beans.n.base-packages= [package name, ...]
#    profiler.spring.beans.n.name.pattern= [regex pattern, regex:regex pattern, antstyle:antstyle pattern, ...]
#    profiler.spring.beans.n.class.pattern= [regex pattern, regex:regex pattern, antstyle:antstyle pattern, ...]
#    profiler.spring.beans.n.annotation= [annotation name, ...]
#
# Scope:
# component-scan: <context:component-scan ... /> or @ComponentScan
# post-processor: BeanPostProcessor - Slow!!!
#
# ANT Style pattern rules:
# ? - matches on character
# * - matches zero or more characters
# ** - matches zero or more 'directories' in a path

# Examples
# profiler.spring.beans.1.scope=component-scan
# profiler.spring.beans.1.base-packages=com.foo, com.bar
# profiler.spring.beans.1.name.pattern=.*Foo, regex:.*Bar, antstyle:*Controller
# profiler.spring.beans.1.class.pattern=
# profiler.spring.beans.1.annotation=org.springframework.stereotype.Controller,org.springframework.stereotype.Service,org.springframework.stereotype.Repository
#
# profiler.spring.beans.2.scope=post-processor
# profiler.spring.beans.2.base-packages=com.foo
# profiler.spring.beans.2.name.pattern=
# profiler.spring.beans.2.class.pattern=antstyle:com.foo.repository.*Repository, antstyle:com.foo.Service.Main*
# profiler.spring.beans.2.annotation=

profiler.spring.beans.1.scope=component-scan
profiler.spring.beans.1.base-packages=
profiler.spring.beans.1.name.pattern=
profiler.spring.beans.1.class.pattern=
profiler.spring.beans.1.annotation=org.springframework.stereotype.Controller,org.springframework.stereotype.Service,org.springframework.stereotype.Repository

profiler.spring.beans.mark.error=false

###########################################################
# spring @Async
###########################################################
profiler.spring.async.enable=true
# Add custom AsyncTaskExecutor classes. Comma separated list of fully qualified class names. Wildcard not supported.
# Default values
#     org.springframework.scheduling.concurrent.ConcurrentTaskExecutor
#     org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler
#     org.springframework.core.task.SimpleAsyncTaskExecutor
#     org.springframework.scheduling.quartz.SimpleThreadPoolTaskExecutor
#     org.springframework.core.task.support.TaskExecutorAdapter
#     org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor
#     org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler
#     org.springframework.jca.work.WorkManagerTaskExecutor
#     org.springframework.scheduling.commonj.WorkManagerTaskExecutor
profiler.spring.async.executor.class.names=

###########################################################
# Spring WebFlux
###########################################################
profiler.spring.webflux.enable=true

# Client
# If you are not using Reactor-Netty, set it to true.
profiler.spring.webflux.client.enable=false
# Record Parameter.
profiler.spring.webflux.client.param=true
# Record cookies.
profiler.spring.webflux.client.cookie=true
# When cookies should be dumped. It could be ALWAYS or EXCEPTION.
profiler.spring.webflux.client.cookie.dumptype=ALWAYS
# 1 out of n cookies will be sampled where n is the rate. (1: 100%)
profiler.spring.webflux.client.cookie.sampling.rate=1
# Cookie dump size.
profiler.spring.webflux.client.cookie.dumpsize=1024

###########################################################
# Reactor
###########################################################
profiler.reactor.enable=true
# Set whether to trace the Subscriber.onError(Throwable t) method
profiler.reactor.trace.subscribe.error=true
# Set messages to be excluded from errors. Messages are separated by ',' characters.
profiler.reactor.trace.subscribe.error.exclude.message=404 NOT_FOUND, 100 Continue
# Set whether to trace the Scheduler.schedule(Runnable task), Scheduler.schedule(Runnable task, long delay, TimeUnit unit)
profiler.reactor.trace.schedule=true
# Set whether to trace the Scheduler.schedulePeriodically(Runnable task, long initialDelay, long period, TimeUnit unit)
profiler.reactor.trace.schedule.periodically=false

###########################################################
# log4j (guide url : https://github.com/naver/pinpoint/blob/master/doc/per-request_feature_guide.md)
###########################################################
profiler.log4j.logging.transactioninfo=false

###########################################################
# log4j2 (guide url : https://github.com/naver/pinpoint/blob/master/doc/per-request_feature_guide.md)
###########################################################
profiler.log4j2.logging.transactioninfo=false

###########################################################
# logback (guide url : https://github.com/naver/pinpoint/blob/master/doc/per-request_feature_guide.md)
###########################################################
profiler.logback.logging.transactioninfo=false


###########################################################
# google httpclient
###########################################################
# Profile async.
profiler.google.httpclient.async=true


###########################################################
# redis                                                   #
###########################################################
# Jedis client
profiler.redis.jedis.enable=true
profiler.redis.jedis.pipeline=true
profiler.redis.jedis.io=true

# Lettuce client
profiler.redis.lettuce.enable=true

# Redisson client
profiler.redis.redisson.enable=true
profiler.redis.redisson.keytrace=true

###########################################################
# nBase-ARC                                               #
###########################################################
profiler.nbase_arc=true
profiler.nbase_arc.pipeline=true
profiler.nbase_arc.io=true


###########################################################
# OkHttp
###########################################################
profiler.okhttp.enable=true
# Record param.
profiler.okhttp.param=true

# Record Cookies.
profiler.okhttp.cookie=true
# When to dump cookies. Either ALWAYS or EXCEPTION.
profiler.okhttp.cookie.dumptype=ALWAYS
# 1 out of n cookies will be sampled where n is the rate. (1: 100%)
profiler.okhttp.cookie.sampling.rate=1
profiler.okhttp.cookie.dumpsize=1024

profiler.okhttp.async=true
profiler.okhttp.entity.statuscode=true

###########################################################
# Apache CXF
# Version 2.6.2+ is supported.
# Note: logging.enable must use cxf logging
# see http://cxf.apache.org/docs/message-logging.html
###########################################################
profiler.cxf.service.enable=false
profiler.cxf.logging.enable=false

###########################################################
# fastjson
###########################################################
profiler.json.fastjson=false

###########################################################
# NIMM                                                    #
###########################################################
profiler.nimm.param=true

###########################################################
# gson
###########################################################
profiler.json.gson=true

###########################################################
# jackson
###########################################################
profiler.json.jackson=true

###########################################################
# json-lib
###########################################################
profiler.json.jsonlib=true

###########################################################
# ActiveMQ Client
###########################################################
profiler.activemq.client.enable=true
profiler.activemq.client.producer.enable=true
profiler.activemq.client.consumer.enable=true
profiler.activemq.client.trace.message=false

# ActiveMQ destination path separator (default is ".")
profiler.activemq.client.destination.separator=

# ActiveMQ destinations to exclude from tracing (comma seprated list of ant-matched destinations)
profiler.activemq.client.destination.exclude=

###########################################################
# RxJava
###########################################################
profiler.rxjava=true

###########################################################
# Hystrix
###########################################################
# profiler.rxjava must also be enabled to properly trace hystrix commands
profiler.hystrix=true

###########################################################
# RestTemplate
###########################################################
profiler.resttemplate=false

###########################################################
# Netty
###########################################################
profiler.netty=false
profiler.netty.http=false
profiler.netty.http.param=false
# use channel.close()
profiler.netty.channel.close=true

###########################################################
# RabbitMQ Client
###########################################################
profiler.rabbitmq.client.enable=true
profiler.rabbitmq.client.producer.enable=true
profiler.rabbitmq.client.consumer.enable=true
# Custom consumer classes to be traced (comma separated list of fully qualified class names)
# If a consumer class is an inner class, specify the outer class
profiler.rabbitmq.client.consumer.classes=
# RabbitMQ exchange to exclude from tracing (comma seprated list of ant-matched destinations)
profiler.rabbitmq.client.exchange.exclude=

###########################################################
# Akka HTTP (Reliability and stability can not be guaranteed)
###########################################################
# HTTP server
profiler.akka.http.enable=false
# original IP address header
profiler.akka.http.realipheader=Remote-Address
# URLs to exclude from tracing
profiler.akka.http.excludeurl=
# HTTP Request methods to exclude from tracing
profiler.akka.http.excludemethod=
# Set transform target
# If you are using another directive, change below config
profiler.akka.http.transform.targetname=akka.http.scaladsl.server.directives.BasicDirectives.$anonfun$mapRequestContext$2
profiler.akka.http.transform.targetparameter=scala.Function1,scala.Function1,akka.http.scaladsl.server.RequestContext

###########################################################
# Kafka (Reliability and stability can not be guaranteed)
# Version 0.11+ is supported.
# Please read `readme.md` in Kafka Plugin, before use Kafka Plugin (https://github.com/naver/pinpoint/tree/master/plugins/kafka/README.md)
###########################################################
profiler.kafka.producer.enable=true
profiler.kafka.consumer.enable=true
# Setting when using spring-kafka (In this case, you can leave profiler.kafka.consumer.entryPoint option to empty.)
profiler.springkafka.consumer.enable=true
# you must set target that handles ConsumerRecord or ConsumerRecords(Remote Trace feature is not enabled.) as a argument for remote trace
# ex) profiler.kafka.consumer.entryPoint=clazzName.methodName
profiler.kafka.consumer.entryPoint=

###########################################################
# Hbase (Reliability and stability can not be guaranteed)
###########################################################
profiler.hbase.client.enable=true
profiler.hbase.client.admin.enable=true
profiler.hbase.client.table.enable=true
profiler.hbase.client.params.enable=true

###########################################################
# GRPC (Reliability and stability can not be guaranteed)
# Version 1.6.0+ is supported.
###########################################################
profiler.grpc.client.enable=true
profiler.grpc.server.enable=true
# In case of streaming, does not track all of each stream request.
# After the streaming open in client, all of each stream request are tracked in one remote trace.
# Therefore, tracking stream request  that you want can be difficult.
# please be sure that this description.
profiler.grpc.server.streaming.enable=false
profiler.grpc.server.streaming.onmessage.enable=false

###########################################################
# Openwhisk (Reliability and stability can not be guaranteed)
# Note: To use Openwhisk plugin, please enable Akka HTTP Plugin and
# change transform target config as follows
# - profiler.akka.http.transform.targetname=akka.http.scaladsl.server.directives.ExecutionDirectives$$anonfun$handleExceptions$1$$anonfun$apply$1.apply
# - profiler.akka.http.transform.targetparameter=akka.http.scaladsl.server.RequestContext
###########################################################
profiler.openwhisk.enable=false
profiler.openwhisk.logging.message=false
profiler.openwhisk.transform.targetname=whisk.http.BasicHttpService$$anonfun$assignId$1$$anonfun$apply$13
profiler.openwhisk.transform.targetparameter=

###########################################################
# Elasticsearch
###########################################################
profiler.elasticsearch.enabled=true
profiler.elasticsearch.recordDsl=true
profiler.elasticsearch.recordESVersion=false

###########################################################
# ElasticsearchBBoss
###########################################################
profiler.elasticsearchbboss.enabled=true
profiler.elasticsearchbboss.recordResult=false
profiler.elasticsearchbboss.recordArgs=true
profiler.elasticsearchbboss.recordDsl=true
profiler.elasticsearchbboss.recordESVersion=true
profiler.elasticsearchbboss.recordResponseHandlerClass=false
profiler.elasticsearchbboss.maxDslSize=50000

###########################################################
# JDK CompletableFuture
###########################################################
profiler.jdk.concurrent.completable-future=true

###########################################################
# Thread
###########################################################
# which package of runnable(callable) instance can be thread plugin trace
# Set the package name to track
# eg) profiler.thread.match.package=com.company.shopping.cart, com.company.payment
profiler.thread.match.package=
# Support class : Runnable,Callable,Supplier
# - Runnable : java.lang.Runnable
# - Callable : java.util.concurrent.Callable
# - Supplier : java.util.function.Supplier
profiler.thread.support-class=Runnable,Callable

###########################################################
# Process Fork Tracing Plugin
###########################################################
profiler.process.tracing.enabled=true

###########################################################
# OwFS
###########################################################
profiler.owfs.enable=true
# Set the methods of the OwfsFile class you want to trace. Messages are separated by ',' characters.
# The basic methods are read, write and append.
profiler.owfs.trace.owfs-file.methods=read, write, append

#profiler.guice.module.factory=com.navercorp.pinpoint.profiler.context.module.NaverApplicationContextModuleFactory
# for security
profiler.guice.module.factory=com.navercorp.pinpoint.profiler.context.module.NaverApplicationContextModuleFactory